eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2xvbmU6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIHRhZ3M6IHRydWUKICAgIHJlY3Vyc2l2ZTogdHJ1ZQogICAgc3VibW9kdWxlX292ZXJyaWRlOgogICAgICB3aWtpOiBodHRwczovL2dpdGh1Yi5jb20vc2NhbGFjZW50ZXIvc2J0LXJlbGVhc2UtZWFybHkud2lraS5naXQKCiAgc2Z0cF9jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGUKICAgIHJlc3RvcmU6IHRydWUKICAgIGlnbm9yZV9icmFuY2g6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2gsIHB1bGxfcmVxdWVzdCwgdGFnLCBkZXBsb3ltZW50IF0KICAgIG1vdW50OgogICAgICAtIC9kcm9uZS8uaXZ5MgogICAgICAtIC9kcm9uZS8uY291cnNpZXIKICAgICAgLSAvZHJvbmUvLnNidAogICAgICAtIC9kcm9uZS8uZ2l0CgogIGJ1aWxkOgogICAgaW1hZ2U6IHNjYWxhY2VudGVyL3NjYWxhOjEuMwogICAgdm9sdW1lczoKICAgICAgLSAvZmFrZS1zY2FsYWNlbnRlcjova2V5cwogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRFJPTkVfRElSPS9kcm9uZQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGxvZyB8IGhlYWQgLW4gMjAKICAgICAgLSAvdXNyL2xvY2FsL2Jpbi9zZXR1cF9rZXlzLnNoIAogICAgICAtIC91c3IvbG9jYWwvYmluL3N0b3JlX2NyZWRlbnRpYWxzLnNoIAogICAgICAtIHNidCBjbGVhbiBkZWJ1ZyBzY3JpcHRlZAoKICBwdWJsaXNoOgogICAgIyBNb3VudCBmcm9tIGFuIGlkZW50aWNhbCBpbWFnZSBidXQgd2l0aCBkaWZmZXJlbnQgaWQKICAgICMgc28gdGhhdCBzb25hdHlwZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIG5vdCBhY2Nlc3NpYmxlCiAgICBpbWFnZTogc2NhbGFjZW50ZXIvc2NhbGEtcHVibGlzaDoxLjMKICAgIHZvbHVtZXM6CiAgICAgIC0gL3NjYWxhY2VudGVyOi9rZXlzCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoLCB0YWcsIGRlcGxveW1lbnQgXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKICAgIGVudmlyb25tZW50OgogICAgICAtIERST05FX0RJUj0vZHJvbmUKICAgIGNvbW1hbmRzOgogICAgICAtIGdpdCBsb2cgfCBoZWFkIC1uIDIwCiAgICAgIC0gL3Vzci9sb2NhbC9iaW4vc2V0dXBfa2V5cy5zaCAKICAgICAgLSAvdXNyL2xvY2FsL2Jpbi9zdG9yZV9jcmVkZW50aWFscy5zaCAKICAgICAgLSBzYnQgcmVsZWFzZUVhcmx5CgogIHNmdHBfY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlCiAgICByZWJ1aWxkOiB0cnVlCiAgICB3aGVuOgogICAgICBzdGF0dXM6IFsgc3VjY2VzcywgZmFpbHVyZSBdCiAgICAgIGV2ZW50OiBbIHB1c2gsIHB1bGxfcmVxdWVzdCwgdGFnLCBkZXBsb3ltZW50IF0KICAgIG1vdW50OgogICAgICAtIC9kcm9uZS8uaXZ5MgogICAgICAtIC9kcm9uZS8uY291cnNpZXIKICAgICAgLSAvZHJvbmUvLnNidAogICAgICAtIC9kcm9uZS8uZ2l0Cg.RE41PQhrJPw7IEFyLVr6ARDOtytKyT-AMc7CTqnYq_o