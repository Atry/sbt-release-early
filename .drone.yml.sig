eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgc2Z0cF9jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGUKICAgIHJlc3RvcmU6IHRydWUKICAgIGlnbm9yZV9icmFuY2g6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2gsIHB1bGxfcmVxdWVzdCwgdGFnLCBkZXBsb3ltZW50IF0KICAgIG1vdW50OgogICAgICAtIC9kcm9uZS8uaXZ5MgogICAgICAtIC9kcm9uZS8uY291cnNpZXIKICAgICAgLSAvZHJvbmUvLnNidAogICAgICAtIC9kcm9uZS8uZ2l0CgogIGJ1aWxkOgogICAgaW1hZ2U6IHNjYWxhY2VudGVyL3NjYWxhOjEuMwogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGZldGNoIC0tdGFncyAmJiBnaXQgbG9nIHwgaGVhZCAtbiAyMAogICAgICAtIC91c3IvbG9jYWwvYmluL3N0b3JlX2NyZWRlbnRpYWxzLnNoIAogICAgICAtIHNidCBjbGVhbiBzY3JpcHRlZAoKICBwdWJsaXNoOgogICAgIyBNb3VudCBmcm9tIGFuIGlkZW50aWNhbCBpbWFnZSBidXQgd2l0aCBkaWZmZXJlbnQgaWQKICAgICMgc28gdGhhdCBzb25hdHlwZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIG5vdCBhY2Nlc3NpYmxlCiAgICBpbWFnZTogc2NhbGFjZW50ZXIvc2NhbGEtcHVibGlzaDoxLjMKICAgIHZvbHVtZXM6CiAgICAgIC0gL3NjYWxhY2VudGVyOi9rZXlzCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoLCB0YWcsIGRlcGxveW1lbnQgXQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRFJPTkVfRElSPS9kcm9uZQogICAgY29tbWFuZHM6CiAgICAgIC0gZ2l0IGZldGNoIC0tdGFncyAmJiBnaXQgbG9nIHwgaGVhZCAtbiAyMAogICAgICAtIC91c3IvbG9jYWwvYmluL3NldHVwX2tleXMuc2ggCiAgICAgIC0gL3Vzci9sb2NhbC9iaW4vc3RvcmVfY3JlZGVudGlhbHMuc2ggCiAgICAgIC0gc2J0IHJlbGVhc2VFYXJseQoKICBzZnRwX2NhY2hlOgogICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZQogICAgcmVidWlsZDogdHJ1ZQogICAgd2hlbjoKICAgICAgc3RhdHVzOiBbIHN1Y2Nlc3MsIGZhaWx1cmUgXQogICAgICBldmVudDogWyBwdXNoLCBwdWxsX3JlcXVlc3QsIHRhZywgZGVwbG95bWVudCBdCiAgICBtb3VudDoKICAgICAgLSAvZHJvbmUvLml2eTIKICAgICAgLSAvZHJvbmUvLmNvdXJzaWVyCiAgICAgIC0gL2Ryb25lLy5zYnQKICAgICAgLSAvZHJvbmUvLmdpdAo.axcqps-i8HVnFzr16lCu3Bd8HrxPJF-CgpBesJEn9Sg